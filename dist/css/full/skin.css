@charset "UTF-8";
/*
	@module
		title: skin *n
		type: scss *n
		caption:
			p{ Модуль формирует файл скина, собиая во едино все 
			файлы сетки и вспомогательные классы. }p
			p{ Если Вам нужно вручную менять стили при разных 
			разрешениях дисплея, - создайте нужный файл в папке 
			bd{ _media/ } и добавтье свои медиа-запросы 
			в конец этого файла. }p
		*n
*/
/* -----------------------------------------------------
	include function 'calc' and Compass-like mixins
*/
/*
	@module
		title: config *n
		type: scss *n
		caption:
			p{ Конфигом системы служит .scss-файл, который содержит 
			в себе настройки для всей системы вцелом. Он находится 
			в папке bd{ scss/_config.scss }. }p
		*n
*/
/*--------------------------------------------------------------
													КОНФИГ
--------------------------------------------------------------*/
/*@property
		name: $gutter *n
		caption: Отступ по бокам внутри ячейки сетки. 
			[$gutter|<content here>|$gutter]. Если параметр равен 0 - 
			контент прижимается вплотную к соронам блока. По умолчанию 
			задано 10пикс. *n
*/
/*@property
		name: $grid_line_height *n
		caption: Высота строки или междустрочный интервал. Применяется 
			для bd{ <body> } *n
*/
/*@property
		name: $grid_sizes *n
		caption: Это массив с размерами шаблона. Если Вам дают макет 
			шириной в 1400 пикселей, то вы указываете 1400. Если в одном 
			шаблоне есть разные ширины сетки, к примеру 1400 и 960 пикселей, 
			то вы указываете их оба через запятую, при чем от меньшего к 
			большему. Допускается произвольное количество размеров 
			(если они Вам нужны). *n
*/
/*@property
		name: $primary_grid *n
		caption: Основная ширина сетки. *n
*/
/*@property
		name: $grid_prefixes *n
		caption: p{ Это массив, содержащий ассоциативные массивы с 
			брейкпоинтами. Брейкпоинты помогают Вам добиться отображения 
			при разных ширинах дисплея (адаптивный дизайн) иной ширины 
			блоков. }p 
			p{ Здесь x1d4 – ширина ячейки по умолчанию (1/4). на мобильном 
			телефоне мы хотим чтобы она отображалась по-другому (1/2), для 
			этого мы используем брейк-поинт x1d2--m, который на мобильном 
			устройстиве отобразит ячейку шире (1/2). }p
			p{ Массив состоит из ассоциативных массивов (480, ‘--m’), в 
			которых передается ширина, при которой брейкпоинт должен 
			сработать и префикс, по которому к брейкпоинту можно обратиться. 
			Вы сами можете создать сколько угодно брейкпоинтов. }p *n
			p{ Создает набор классов типа bd{.x<X>d<D>--<BRAKEPOINT>} }p *n
*/
/*@property
		name: $grid_calc *n
		caption: p{ Это части, на которые можно “дробить” ячейки в 
			сетке. Мощнейшим преимуществом сетки есть дробление на 
			произвольное количество ячеек, и сетка может разбиваться не 
			на 12 колонок (как в Bootstrap), а на произвольное количество ячеек
			(например на 100, если это Вам нужно). }p 
			p{ Эти части являются как ширинами блока, так и ширинами ячеек.
			Это значит, что вам не обязательно указывать постоянную ширину 
			знаменателя (bd{x1d12}, bd{x3d12} и т.д). Это выражение - формирует 
			процент от ширины, соответственно, bd{x1d2} и bd{x6d12} - это 
			одно и то же (50%)) }p
			p{ Создает набор классов типа bd{.x<X>d<D>} }p *n
*/
/*@property
		name: $fixed_widths *n
		caption: p{ Содержит массив с фиксированными размерами (в пикселях). }p 
			p{ Аналогично bd{$grid_calc}. }p*n
			p{ Создает набор классов типа bd{.w-fixed-<WIDTH>} }p *n
*/
/*@property
		name: $islands *n
		caption: p{ Массив с размерами отступов. Эти отступы означают 
			равные отступы со всех сторон блока (от слова island, остров). 
			То есть указывая 10px – Вы указываете отступ в 10 пикселей со 
			всех сторон. Это есть padding и margin. }p 
			p{ Создает набор классов типа bd{.island-<NUMBER>} }p *n
*/
/*@property
		name: $vertical_indents *n
		caption: p{ Массив с размерами отступов. Аналогично bd{$islands},
			за исключением того, что отступы указываются только по вертикали. }p 
			p{ Создает набор классов типа: 
				ul{
					li{ bd{.pad-v<NUMBER>} - внутренний отступ сверху и снизу }li
					li{ bd{.pad-top-<NUMBER>} - внутренний отступ сверху }li
					li{ bd{.pad-bot-<NUMBER>} - внутренний отступ снизу }li
					li{ bd{.marg-v<NUMBER>} - внешний отступ сверху и снизу }li
					li{ bd{.marg-top-<NUMBER>} - внешний отступ сверху }li
					li{ bd{.marg-bot-<NUMBER>} - внешний отступ снизу }li
				}ul
			}p *n
*/
/*@property
		name: $vertical_indents *n
		caption: p{ Массив с размерами отступов. Аналогично bd{$islands},
			за исключением того, что отступы указываются только по горизонтали. }p 
			p{ Создает набор классов типа: 
				ul{
					li{ bd{.pad-h<NUMBER>} - внутренний отступ слева и справа }li
					li{ bd{.pad-left-<NUMBER>} - внутренний отступ слева }li
					li{ bd{.pad-right-<NUMBER>} - внутренний отступ справа }li
					li{ bd{.marg-h<NUMBER>} - внешний отступ слева и справа }li
					li{ bd{.marg-left-<NUMBER>} - внешний отступ слева }li
					li{ bd{.marg-right-<NUMBER>} - внешний отступ справа }li
				}ul
			}p *n
		*n
*/
/*@property
		name: $min_font_size, $max_font_size *n
		caption: p{ Размеры шрифта. Применяются к блоку. }p*n
			p{ Создает набор классов типа bd{.font-<NUMBER>}, где <NUMBER> -
			это диапазон от bd{$min_font_size} до bd{$max_font_size} }p *n
*/
/*@property
		name: .YourColor *n
		caption: Устанавливает цвет текста с названием YourColor.
		Параметры задаются в bd{ _config.scss }, в объекте 
		bd{ $colors_list } *n
*/
/*@property
		name: .bg-YourColor *n
		caption: Устанавливает фона блока с названием YourColor.
		Параметры задаются в bd{ _config.scss }, в объекте 
		bd{ $colors_list_bg } *n
*/
/*@property
		name: $exports *n
		caption: Указывает какие модули необходимо подключить. *n
*/
/*--------------------------------------------------------------
												ПЕРЕМЕННЫЕ
--------------------------------------------------------------*/
/*@property
		name: $font_size *n
		caption: Устанавливает размер шрифта по умолчанию для <body> *n
*/
/*
	Приватный модуль для генерации брейкпоинтов.
*/
/* -----------------------------------------------------
	include default styles, fonts, indents, and so on...
*/
/*
	@module
		title: defaults *n
		type: scss *n
		caption:
			p{ Модуль по минимуму сбрасывает глобальные стили (по 
			типу normalize.css), указывает начальные настройки для
			шрифтов, а так же вносит ряд заранее щаготовленных классов
			для манипуляции и кастомизации элементов. }p
		*n
*/
/*--------------------------------------------------------------
													M A I N
--------------------------------------------------------------*/
* {
  padding: 0;
  margin: 0;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

html {
  font-size: 14px; }

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%; }

figure {
  margin: 0;
  padding: 0; }

/*--------------------------------------------------------------
													ПОЗИЦИОНИРОВАНИЕ
--------------------------------------------------------------*/
/*@property
		name: relative *n
		caption: Относительное позиционирование *n
*/
.relative {
  position: relative; }

/*@property
		name: absolute *n
		caption: Абсолютное позиционирование *n
*/
.absolute {
  position: absolute; }

/*@property
		name: fixed *n
		caption: Фиксированный блок *n
*/
.fixed {
  position: fixed; }

/*@property
		name: static *n
		caption: Относительное позиционирование *n
*/
.static {
  position: static; }

/*--------------------------------------------------------------
													СБРОС
--------------------------------------------------------------*/
/*@property
		name: clear-input *n
		caption: Сброс стилей bd{<input>}. Убирает рамку, фон
		отступы, устанавливает ширину в 100%. *n
*/
.clear-input {
  background: none;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  border: none;
  padding: 0;
  margin: 0;
  width: 100%; }

/*@property
		name: noresize *n
		caption: Убирает возможность изменения размера для
		 bd{<textarea>}. *n
*/
.noresize {
  resize: none; }

/*@property
		name: clear-list, unstyled-list, clear-ul *n
		caption: Убирает отступы для bd{<ul>}, как внешние, так
		и внутренние. Убирает маркеры списка. *n
*/
.clear-list,
.unstyled-list,
.clear-ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
  list-style: none; }

/*@property
		name: disable-hover *n
		caption: Убирает pointer-events (события ховера, 
		фокуса и т.д) для элемента, которому непосредственно 
		добавляется класс. *n
*/
.disable-hover {
  pointer-events: none !important; }

/*@property
		name: disable-hover-childs *n
		caption: Убирает pointer-events (события ховера, 
		фокуса и т.д) для элементов, строго лежащим внутри 
		элемента, которому добавляется класс. *n
*/
.disable-hover-childs > * {
  pointer-events: none !important; }

/*@property
		name: disable-hover-allchilds *n
		caption: Убирает pointer-events (события ховера, 
		фокуса и т.д) для любых потомков, лежащих внутри 
		элемента, которому добавляется класс. *n
*/
.disable-hover-allchilds * {
  pointer-events: none !important; }

/*@property
		name: ultra-hide *n
		caption: Устанавливает для элемента абсолютное 
		позиционирование, задает ширину и высоту в 1пикс,
		и скрывает элемент со страницы путем отрицательного
		отступа вверх-влево. *n
*/
.ultra-hide {
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  left: -1000%;
  top: -1000%;
  text-indent: -1000%; }

/*@property
		name: adaptive *n
		caption: Применяется для <img>, указывает ширину 100%. 
		Картинка будет автоматически увеличивать высоту, в 
		зависимости от своей ширины. *n
*/
img.adaptive {
  display: block;
  width: 100%;
  height: auto; }

/*--------------------------------------------------------------
													ВЫРАВНИВАНИЕ
--------------------------------------------------------------*/
/*@property
		name: center *n
		caption: Выравнивает текст по центру блока. Выравнивает
		bd{inline-block}-элементы по центру родителя. Выравнивает 
		bd{inline-flex}-элементы по центру bd{flex}-родителя. *n
*/
.center {
  text-align: center; }

/*@property
		name: right *n
		caption: Выравнивает текст по правой стороне блока. 
		Выравнивает bd{inline-block}-элементы по правой стороне 
		родителя. Выравнивает bd{inline-flex}-элементы по правой 
		стороне bd{flex}-родителя. *n
*/
.right {
  text-align: right; }

/*@property
		name: left *n
		caption: Выравнивает текст по левой стороне блока. 
		Выравнивает bd{inline-block}-элементы по левой стороне 
		родителя. Выравнивает bd{inline-flex}-элементы по левой 
		стороне bd{flex}-родителя. *n
*/
.left {
  text-align: left; }

/*@property
		name: justify *n
		caption: Выравнивает текст по краям для блока. 
		Выравнивает bd{inline-flex}-элементы по краям 
		bd{flex}-родителя. *n
*/
.justify {
  text-align: justify; }

/*@property
		name: align-top *n
		caption: Выравнивает bd{inline-block}-элементы 
		по верхней грани. Выравнивает bd{inline-flex}-элементы 
		по верхней грани.*n
*/
.align-top {
  vertical-align: top; }

/*@property
		name: align-middle *n
		caption: Выравнивает bd{inline-block}-элементы 
		вертикально по середине. Выравнивает bd{inline-flex}-элементы 
		вертикально по середине.*n
*/
.align-middle {
  vertical-align: middle; }

/*@property
		name: align-bottom *n
		caption: Выравнивает bd{inline-block}-элементы 
		по нижней грани. Выравнивает bd{inline-flex}-элементы 
		по нижней грани.*n
*/
.align-bottom {
  vertical-align: bottom; }

/*@property
		name: align-baseline *n
		caption: Выравнивает bd{inline-block}-элементы 
		базовой линии текста. Выравнивает bd{inline-flex}-элементы 
		базовой линии текста.*n
*/
.align-baseline {
  vertical-align: baseline; }

/*@property
		name: pull-left *n
		caption: Обтекание блока слева (float).*n
*/
.pull-left {
  float: left; }

/*@property
		name: pull-right *n
		caption: Обтекание блока справа (float).*n
*/
.pull-right {
  float: right; }

/*@property
		name: clearfix, pull-clear *n
		caption: Очистка обтеканий (floats).*n
*/
.clearfix, .pull-clear {
  clear: both; }
  .clearfix:after, .pull-clear:after {
    display: table;
    content: '';
    clear: both; }

/*@property
		name: flex-row *n
		caption: Строка flexbox.*n */
.flex-row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row; }

/*@property
		name: flex-row-rev *n
		caption: Строка flexbox с обратным отображением. *n */
.flex-row-rev {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
  -moz-box-orient: horizontal;
  -moz-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse; }

/*@property
		name: flex-col *n
		caption: Ячейка flexbox. *n */
.flex-col {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -moz-box-orient: vertical;
  -moz-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column; }

/*@property
		name: flex-col-rev *n
		caption: Ячейка flexbox с обратным отображением. *n */
.flex-col-rev {
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: column-reverse;
  -moz-box-orient: vertical;
  -moz-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse; }

/*--------------------------------------------------------------
											FLEXIBLE BOX LAYOUT
--------------------------------------------------------------*/
.flexbox {
  /*@property
		name: around *n
		caption: Выравнивает bd{inline-flex}-элементы с 
		отутупами снаружи по краям bd{flex}-родителя. *n */
  /*@property
		name: align-stretch *n
		caption: Выравнивает bd{inline-flex}-элементы 
		по одинковой высоте. *n */
  /*@property
		name: align-center *n
		caption: Выравнивает bd{inline-flex}-элементы 
		по одинковой высоте, и центрирует их содержимое 
		горизонтально по центру. *n */
  /*@property
		name: flex-nowrap *n
		caption: Отключает оборачивание bd{inline-flex}-элементов, 
		лежащих внутри блока. *n */
  /*@property
		name: flex-wrap *n
		caption: Включает оборачивание bd{inline-flex}-элементов, 
		лежащих внутри блока. *n */
  /*@property
		name: flex-wrap-rev *n
		caption: Включает оборачивание bd{inline-flex}-элементов, 
		лежащих внутри блока изменяя порядок отображения. *n */ }
  .flexbox .left {
    -webkit-box-pack: start;
    -webkit-justify-content: start;
    -moz-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start; }
  .flexbox .right {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -moz-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .flexbox .center {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -moz-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .flexbox .justify {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between; }
  .flexbox .around {
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around; }
  .flexbox .align-top {
    -webkit-align-self: flex-start;
    -ms-flex-item-align: start;
    align-self: flex-start; }
  .flexbox .align-bottom {
    -webkit-align-self: flex-end;
    -ms-flex-item-align: end;
    align-self: flex-end; }
  .flexbox .align-middle {
    -webkit-align-self: center;
    -ms-flex-item-align: center;
    align-self: center; }
  .flexbox .align-baseline {
    -webkit-align-self: baseline;
    -ms-flex-item-align: baseline;
    align-self: baseline; }
  .flexbox .align-stretch {
    -webkit-align-self: stretch;
    -ms-flex-item-align: stretch;
    align-self: stretch; }
  .flexbox .align-center {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -moz-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
  .flexbox .flex-nowrap {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap; }
  .flexbox .flex-wrap {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
  .flexbox .flex-wrap-rev {
    -webkit-flex-wrap: wrap-reverse;
    -ms-flex-wrap: wrap-reverse;
    flex-wrap: wrap-reverse; }

/*--------------------------------------------------------------
													ОТОБРАЖЕНИЕ
--------------------------------------------------------------*/
/*@property
		name: block *n
		caption: Блочный элемент. *n
*/
.block {
  display: block; }

/*@property
		name: inline *n
		caption: Строчный блок (inline-block) *n
*/
.inline {
  display: inline-block; }

/*@property
		name: block-extra *n
		caption: Блочный элемент (!important). *n
*/
.block-extra {
  display: block !important; }

/*@property
		name: inline-extra *n
		caption: Строчный блок (inline-block !important) *n
*/
.inline-extra {
  display: inline-block !important; }

/*@property
		name: none *n
		caption: Скрытый блок.*n
*/
.none {
  display: none; }

/*@property
		name: table *n
		caption: Таблица. По умолчанию ширина 100%. *n
*/
.table {
  width: 100%;
  display: table; }

/*@property
		name: trow *n
		caption: Строка таблицы. *n
*/
.trow {
  display: table-row; }

/*@property
		name: thead *n
		caption: Шапка таблицы (table-header-group). *n
*/
.thead {
  display: table-header-group; }

/*@property
		name: tfoot *n
		caption: Подвал таблицы (table-footer-group). *n
*/
.tfoot {
  display: table-footer-group; }

/*@property
		name: tbody *n
		caption: Контент таблицы (table-column-group). *n
*/
.tbody {
  display: table-column-group; }

/*@property
		name: cell *n
		caption: Ячейка таблицы. *n
*/
.cell {
  display: table-cell; }

/*@property
		name: list-item *n
		caption: Элемент списка. *n
*/
.list-item {
  display: list-item; }

/*@property
		name: bg-none *n
		caption: Удаляет фон блока. *n
*/
.bg-none {
  background: none; }

/*--------------------------------------------------------------
													ФОН БЛОКА
--------------------------------------------------------------*/
/*@property
		name: bg-cover *n
		caption: Устанавливает заполнение фоновым изображением 
		фона блока таким образом, чтобы изображение полностью 
		заполняло фон по вертикали и по горизонтали. *n
*/
.bg-cover {
  background-size: cover; }

/*@property
		name: bg-contain *n
		caption: Устанавливает заполнение фоновым изображением 
		фона блока таким образом, чтобы изображение равнялось
		по ширине или высоте блока. *n
*/
.bg-contain {
  background-size: contain; }

/*@property
		name: circle-item *n
		caption: Устанавливает скругление блока в 50%. *n
*/
.circle-item {
  border-radius: 50%; }

/*--------------------------------------------------------------
												ЦВЕТА ТЕКСТА И ФОНА
--------------------------------------------------------------*/
/*@property
		name: .example-color *n
		caption: Устанавливает цвет текста с названием YourColor.
		Параметры задаются в bd{ _config.scss }, в объекте 
		bd{ $colors_list } *n
*/
.black {
  color: #000000; }

.white {
  color: #ffffff; }

/*@property
		name: .bg-example-color *n
		caption: Устанавливает фона блока с названием YourColor.
		Параметры задаются в bd{ _config.scss }, в объекте 
		bd{ $colors_list_bg } *n
*/
.bg-black {
  background-color: #000000; }

.bg-white {
  background-color: #ffffff; }

/* -----------------------------------------------------
	<HEADER> styles
*/
/* -----------------------------------------------------
	<MAIN> styles
*/
/* -----------------------------------------------------
	<FOOTER> styles
*/
/* -----------------------------------------------------
	media queries
	@media (max-width: 768px), (max-device-width: 768px) {
		@import "_media/_768.scss";
	}
*/
/* вставить запросы тут */
